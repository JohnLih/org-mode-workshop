# -*- coding: utf-8 -*-
* Header Information                                               :noexport:
#+TITLE:     Org-mode Teaser Demo
#+AUTHOR:    Karl Voit
#+EMAIL:     tools@Karl-Voit.at
#+DATE:      2012-04-23 Mon
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:

#+STARTUP: hidestars

#+STARTUP: overview   (or: showall, content, showeverything)
http://orgmode.org/org.html#Visibility-cycling

#+TODO: TODO(t) NEXT(n) STARTED(s) WAITING(w@/!) SOMEDAY(S!) | DONE(d!/!) CANCELLED(c@/!)
http://orgmode.org/org.html#Per_002dfile-keywords

#+TAGS: important(i) private(p)
#+TAGS: @HOME(h) @OFFICE(o)
http://orgmode.org/org.html#Setting-tags

#+NOstartup: beamer
#+NOLaTeX_CLASS: beamer
#+NOLaTeX_CLASS_OPTIONS: [bigger]
#+NOBEAMER_FRAME_LEVEL: 2

* Setting Up the Demo                                              :noexport:

- [ ] start key visualization tool like [[http://pabloseminario.com/projects/screenkey/][screenkey]]
- [ ] check font size
  - de/increase by ~S-Mousebutton1~
- [X] disable creation of PROPERTIES drawer containing CREATED timestamp:
  - M-: (org-expiry-deinsinuate)
  - see: Local Variables below


* Org-mode Principles and Advantages
** text files

- text as the lowest common denominator
- portable
- future-proof
- process it with grep, python, ...
- VCS like git, Subversion, ...
- easy synchronization
- advanced search & replace everywhere
- ...

** easy to learn

- outliner (~5 minutes)
- todo-management (~10 minutes)
- GTD implementation (~15 minutes)
- more and more advanced topics
  - one by one
  - depending on personal requirements

** scales

- performance
- learn/use only those parts you need

** wiki-like

- personal knowledge-base
- internal and external links
- very open to external files, APIs, ...

** Meta-data

- define as much as you need
- you've got all possibilities


* A Subset(!) of Org-mode Basics

- Find this document on https://github.com/novoid/org-mode-workshop

#+TBLNAME: key-legend
| *key* | *description*       |
|-------+---------------------|
| M     | Meta (often: Alt)   |
| C     | Ctrl                |
| S     | Shift               |
| TAB   | Tabulator           |
| RET   | Return, Enter, CRLF |
| UP    | arrow: up           |
| DOWN  | arrow: down         |
| LEFT  | arrow: left         |
| RIGHT | arrow: right        |
| SPC   | Space               |

** activate Org-mode

[[http://orgmode.org/worg/org-tutorials/orgtutorial_dto.html#sec-1-2][Activation of Org-mode (external Tutorial)]]:
#+BEGIN_SRC emacs-lisp
(require 'org-install)
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)
#+END_SRC

- Org-mode *minor mode* (structure editing and lists) ~orgstruct-mode~ ([[http://orgmode.org/org.html#Orgstruct-mode][docu]])

** text formatting syntax [[http://orgmode.org/org.html#Emphasis-and-monospace][(docu)]]

- *bold*
- /italic/
- _underline_
- +strike through+
- =code=
- ~commands~
- http://orgmode.org

: small example

#+COMMENT: this will never be exported

#+BEGIN_COMMENT
multi
line
comment
#+END_COMMENT

*** COMMENT: no exported either

foo bar

** outlining ([[http://orgmode.org/org.html#Document-Structure][docu]])

- headlines start with asterisks
- levels
- visibility
  - ~TAB~      *visibility cycling*
  - ~S-TAB~    change buffer visibility
  - ~C-c C-r~  *reveal context*
  - per-file visibility ~#+STARTUP: overview~ and so on: ([[http://orgmode.org/org.html#Visibility-cycling][docu]])
- motion
  - ~C-c C-n~   *next heading*
  - ~C-c C-p~   *previous heading*
  - ~C-c C-u~   one level up
  - ~C-c C-j~   jump (goto)
  - ~C-c C-f~   forward same level
  - ~C-c C-b~   backward same level
- create basic elements
  - ~C-RET~     *new heading* below
- move elements
  - ~M-UP/DOWN~ *move up/down* with subitems
  - ~M-LEFT~    *promote*
  - ~M-RIGHT~   *demote*
  - ~M-S-LEFT/RIGHT~  promote/demote with subitems
- ~C-c C-c~  *toggle/modify* things ([[http://orgmode.org/org.html#The-very-busy-C_002dc-C_002dc-key][docu]])
  - checkbox: activate/deactivate, heading: tags, tables:
    re-calculate, jump footnote and back, update tables, update
    TODO-count, ...

*** Creating

- [ ] DEMO: create headings

*** Using

- [ ] DEMO: visibility cycling
- [ ] DEMO: move headings

This is a quite boring text just to show some body content.

**** This is the 1st heading

This is a quite boring text just to show some body content.

***** Sub-heading 1

This is a quite boring text just to show some body content.

**** This is another heading

This is a quite boring text just to show some body content.

***** Sub-heading 2

This is a quite boring text just to show some body content.

**** This is yet another heading
**** OK, now this is getting boring :-)


*** encryption

- whole Org-mode files
- selective headlines using :crypt:
- ~org-decrypt-entry~

** sparse trees ([[http://orgmode.org/org.html#Sparse-trees][docu]])

- Filtering
  - ~C-c /~    Filter in *sparse trees*
  - ~C-c / r~  Filter using *Regular Expressions*
- Moving in results
  - ~M-g n~    goto next match
  - ~M-g o~    goto previous match
- [[http://orgmode.org/org.html#Property-searches][docu: property search]]

- ~C-c a L~    time sorted view of buffer

** lists [[http://orgmode.org/org.html#Plain-lists][(docu)]]

- ~M-RET~      *new list item*
- ~M-S-RET~    create checkbox
- ~M-LEFT/RIGHT/UP/DOWN~  move item
- ~C-c -~      cycle item type OR turn into list item

*** examples

simple list:
- Emacs
- Org-mode
- Lists

enumerate:
1. Emacs
2. Org-mode
3. Lists

check lists:

*** Simple

- [ ] DEMO: create simple lists and move items around

*** Checklists

- ~M-S-RET~  new item with checkbox
- ~C-c C-*~  checkboxes become TODOs

- Clean out garage
  1. [ ] get stuff out
     - [ ] be careful with that axe, Eugene
  2. [ ] get rid of old stuff
     - using eBay?
     - try to use rubbish as birthday presents for family
  3. [ ] repaint garage
  4. [ ] put stuff back in

*** Headings with TODO items

**** TODO Clean out garage [0/4]

***** TODO get stuff out

- be careful with that axe, Eugene

***** TODO get rid of old stuff

- using eBay?
- try to use rubbish as birthday presents for family

***** TODO repaint garage

***** TODO put stuff back in

** drawers, properties, columns ([[http://orgmode.org/org.html#Properties-and-Columns][docu]])

- meta-data on headings
- standard drawers :PROPERTIES: and :LOGBOOK:
- ends with :END:

- FIXXME

- ~C-c C-z~      timed LOGBOOK entry
- ~:ID: label~   define ID in PROPERTIES

** blocks ([[http://orgmode.org/org.html#Blocks][docu]])

- encapsulating content with begin...end structure
- ~<s + TAB~   easy templates ([[http://orgmode.org/org.html#Easy-Templates][docu]])

#+BEGIN_EXAMPLE
Some example from a text file.
#+END_EXAMPLE

- more of it in the Babel section later on

** links [[http://orgmode.org/org.html#Hyperlinks][(docu)]]

: [[link]]
: [[link][description]]

target:
: # <<link>>

- id:myexampleid
- [[file:~/.zshrc.local]]
- http://orgmode.org
  - [[http://orgmode.org/org.html#External-links][docu: list of external links]]
- custom links: [[contact:John%20Smith][contact:John Smith]]
  - [[http://orgmode.org/org.html#Link-abbreviations][docu: link abbrevations]]

- ~C-c l~    store link (also in many other buffer types: [[http://orgmode.org/org.html#Handling-links][docu]])
- ~C-c C-l~  *inserting link* (or edit existing link)
- ~C-u C-c C-l~  file link (shortcut)
- ~C-c C-o~  open link

- "radio targets" are auto-links created by target like ~<<<target name>>>~
  - all occurrences of "target name" will be links

- ~C-c C-x C-v~  toggle show inline images

- ~C-c %~   push position into ring
- ~C-c &~   goto last saved position in ring

- footnotes ([[http://orgmode.org/org.html#Footnotes][docu]])
  - plain          [fn::great content here]
  - with own label [fn:mylabel:great content here]
  - reference      [fn:myotherlabel] [fn:2]
  - ~C-c C-c~      jump between footnote and reference
  - ~C-c C-x f~    footnote action command (see [[http://orgmode.org/org.html#Footnotes][docu]])

[fn:myotherlabel] This is a footnote from reference above.
[fn:2] This is a footnote with a simple number as label.

- *many external link types* see [[http://orgmode.org/org.html#External-links][docu]]

*** heading with PROPERTIES drawer containing ID
:PROPERTIES:
:ID: myexampleid
:END:

foo bar
** states; TODO items ([[http://orgmode.org/org.html#TODO-Items][docu]])

- ~C-c C-t~   *rotate TODO state*
- ~C-c / t~   sparse tree with TODOs
- ~C-c a t~   global TODO list in agenda
- ~C-S-RET~   *new TODO heading*

- per-file keywords     ~#+TODO: TODO(t) FEEDBACK(f) | DONE(d!) CANCELED(c!@)~
  - ~!~   timestamp
  - ~@~   add note

*** making dependencies explicit

- simple, ordered method with PROPERTIES drawer:
: :ORDERED: t
- ~C-c C-x o~  toggle ORDERED property

- see only tasks that are *not* depending on other *open* tasks
  - see only things that can be done now
- http://orgmode.org/worg/org-contrib/org-depend.html
- to define workflows (see demo below)

- task dependencies with org-depend ([[http://orgmode.org/worg/org-contrib/org-depend.html][docu]])
  - ~:BLOCKER: otherID~               define blocking task
  - ~:TRIGGER: chain-siblings(NEXT)~  define trigger for setting NEXT

**** example with chain siblings

***** NEXT buy bike
:PROPERTIES:
:TRIGGER: chain-siblings(NEXT)
:END:

***** take tour

***** goto hospital
*** logging state changes ([[http://orgmode.org/org.html#Tracking-TODO-state-changes][docu]])

- ~!~ in todo state definition
- ~org-log-into-drawer~ for setting default behavior

*** habits ([[http://orgmode.org/org.html#Tracking-your-habits][docu]])

- enable habits module by customizing the variable ~org-modules~
- TODO items with property STYLE is set to the value ~habit~:
: :STYLE: habit

#+BEGIN_EXAMPLE
     ** TODO Shave
        SCHEDULED: <2009-10-17 Sat .+2d/4d>
        - State "DONE"       from "TODO"       [2009-10-15 Thu]
        - State "DONE"       from "TODO"       [2009-10-12 Mon]
        - State "DONE"       from "TODO"       [2009-10-10 Sat]
        - State "DONE"       from "TODO"       [2009-10-04 Sun]
        - State "DONE"       from "TODO"       [2009-10-02 Fri]
        - State "DONE"       from "TODO"       [2009-09-29 Tue]
        - State "DONE"       from "TODO"       [2009-09-25 Fri]
        - State "DONE"       from "TODO"       [2009-09-19 Sat]
        - State "DONE"       from "TODO"       [2009-09-16 Wed]
        - State "DONE"       from "TODO"       [2009-09-12 Sat]
        :PROPERTIES:
        :STYLE:    habit
        :LAST_REPEAT: [2009-10-19 Mon 00:36]
        :END:
#+END_EXAMPLE

*** priorities ([[http://orgmode.org/org.html#Priorities][docu]])

- ~C-c ,~     set priorities
- ~S-UP/DOWN~ *change priority*

- [A], [B], [C]
- no priority is ordered like [B]

**** TODO [#A] example

*** breaking down in subtasks ([[http://orgmode.org/org.html#Breaking-down-tasks][docu]])

- for TODO-headings: stat cookies   ~[/]~ or ~[%]~ (will be ~[1/3]~ or ~[33%]~)
- also possible:
  - for checkboxes
  - recursive
  - mark entry to DONE if all children are DONE

**** TODO example [1/3] [33%]
***** DONE subtask 1
***** TODO subtask 2
***** TODO subtask 3
** tags [[http://orgmode.org/org.html#Tags][(docu)]]

- inherited tags
- per-file definition of tags:
: #+TAGS: { @work(w) @home(h) } online(o) kids(k)

- per-file tags for all entries:
: #+FILETAGS: :this:that:foo:

- ~C-c C-q~   *set tags*
- ~C-c C-c~   set tags if cursor is on a heading

- ~C-c / m~   *search for tags* in sparse tree
- ~C-c a m~   global list of tag matching
- ~C-c a M~   same but check only TODO items

- syntax ([[http://orgmode.org/org.html#Matching-tags-and-properties][docu]])
  - ~+boss+urgent~  AND
  - ~boss|urgent~   OR
  - ~+boss+urgent-project~   combination of tags
  - ~work+TODO="WAITING"|home+TODO="WAITING"~  Waiting tasks both at work and at home

*** example                                                           :tag:

** tables simple [[http://orgmode.org/org.html#Tables][(docu)]]

- ~C-c C-c~  *update table*
- ~TAB~      *move next field*
- ~RET~      next row
- ~M-LEFT/RIGHT/UP/DOWN~   *moving rows/columns*
- ~C-c -~    insert vertical bar below
- ~C-c |~    convert region into table
- ~C-c ^~    sort lines (in region)

- [ ] DEMO: create table

** tables complex ([[http://orgmode.org/org.html#The-spreadsheet][docu]], [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][tutorial]])

- ~C-c |~  move region into table (see [[http://orgmode.org/org.html#Built_002din-table-editor][docu]])
  - TABs, CSV, ...
- ~C-c +~   sum current column (or marked rectangle)

- ~=$1+$2~            value = sum of 1st and 2nd column
- ~:=vsum(@I..@II)~   field = sum between 1st and 2nd hline

- ~#+TBLFM: $3 = $1 + $2~             table formula
- ~#+TBLFM: $1 = -1 + 1 :: @2$1 = 1~  incremental numbers

- ~org-table-import~  import data from CSV file
- ~org-table-export~  export data to CSV file

#+TBLNAME: mydemo-USD-EUR-rate
| *US-Dollar* |      *EUR* |
|           1 | 0.76481836 |

|     *When* | *What*                 | *USD* | *EUR* |
|------------+------------------------+-------+-------|
| 2012-02-03 | Taxi Graz-Airport      |       | 18.00 |
| 2012-02-03 | Taxi Seattle Airport   | 25.00 | 19.12 |
| 2012-02-13 | Taxi                   |  7.00 |  5.35 |
| 2012-02-14 | Taxi                   |  8.00 |  6.12 |
| 2012-02-17 | Taxi to Airport SeaTac | 35.00 | 26.77 |
| 2012-02-22 | Taxi Airport-Graz      |       | 16.00 |
|------------+------------------------+-------+-------|
|            |                        |       | 91.36 |
#+TBLFM: @>$4=vsum(@I$4..@II$4);%.2f::@3$4=@3$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@4$4=@4$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@5$4=@5$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@6$4=@6$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f

- ~C-c C-c~   update values
- ~C-c }~     visualize rows/columns
- ~C-c '~     edit formula in separate buffer
- [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html#sec-7][debugging formulas]]

- many, many, many more table features in the documentation!

** column view ([[http://orgmode.org/org.html#Column-view][docu]])
:PROPERTIES:
:COLUMNS:  %25ITEM %TAGS %PRIORITY %TODO %10MyProperties
:MyProperties_ALL: "Thomas" "Maria" "Susan" "Joe"
:END:

- ~C-c C-x C-c~   activate column view
- ~e~             edit value
- ~n/p~           next/previous value
- ~q~             quit column view
- ~a~             edit allowed values
- ~C-c C-x p~     set property

*** example sub-item                                               :mytag1:
:PROPERTIES:
:MyProperties: Susan
:END:

*** NEXT [#B] another example                                      :mytag2:
:PROPERTIES:
:MyProperties: Thomas
:END:

** capture, refile, archive ([[http://orgmode.org/org.html#Capture-_002d-Refile-_002d-Archive][docu]])

- ~C-c c~          *capture*
- ~C-c C-w~        *refile*
- ~C-c C-x C-a~    *archive*
- ~C-u C-u C-c c~  *goto last capture*

- ~#+ARCHIVE: %s_done::~   per-file archive
- ~C-c C-x a~       toggle ARCHIVE tag
- ~C-u C-c C-x a~   check direct children for archiving

#+BEGIN_SRC emacs-lisp
;; ######################################################
;; templates for capturing C-c c
;; http://orgmode.org/org.html#Capture-templates
(setq org-capture-templates
      '(
	("s" "shorts-todo" entry (file+headline "~/share/all/org-mode/misc.org" "shorts")
	 "* NEXT %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("e" "Event" entry (file+headline "~/share/all/org-mode/misc.org" "Events")
	 "* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("i" "IST Templates")
	("is" "IST shorts" entry (file+headline "~/share/all/org-mode/IST.org" "shorts")
	 "* NEXT %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("ie" "IST event" entry (file+headline "~/share/all/org-mode/IST.org" "Events")
	 "* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("ii" "IST isst" entry (file+headline "~/share/all/org-mode/IST.org" "Events")
	 "* %? IST isst: \n:PROPERTIES:\n:CREATED: %U\n:END:\n\n- [[contact:Ingo Pill][Ingo Pill]]\n- [[contact:Thomas Quartisch][Thomas Quartisch]]\n\n" :empty-lines 1)
	("b" "Besorgung" entry (file+headline "~/share/all/org-mode/hardware.org" "Besorgungen")
	 "* TODO %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("C" "Clipboard" entry (file+headline "~/share/all/org-mode/misc.org" "shorts")
	 "* TODO %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n%x\n\n" :empty-lines 1)
	("c" "capture to inbox, refile later" entry (file "~/share/all/org-mode/inbox.org")
	 "\n* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("m" "movie" entry (file+headline "~/share/all/org-mode/movies.org" "inbox")
	 "* TODO %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("x" "xlog")
	("xh" "xlog hometrainer" table-line (id "xlog-hometrainer") "| %T |  |  |  |")
	("xk" "Keyboard Akkus leer" table-line (id "3407c9b7-1b41-443b-9254-32c4af3a54e8") "| %T |")
      )
)
#+END_SRC

** dates & time ([[http://orgmode.org/org.html#Dates-and-Times][docu]])

- ~C-c .~    *insert active* <2012-04-23 Mon>  (with ~C-u~: <2012-04-23 Mon 19:14>)
- ~C-c !~    insert inactive [2012-04-23 Mon]  (with ~C-u~: [2012-04-23 Mon 19:14])
- ~S-RIGHT/LEFT/UP/DOWN~  interactively change timestamp
- ~C-c <~    *insert today* 
- ~C-c C-o~  open agenda for current timestamp

- ~C-c C-d~  *insert DEADLINE*
- ~C-c C-s~  *insert SCHEDULED*

- ~C-u C-c C-d~   removing DEADLINE
- ~C-u C-c C-s~   removing SCHEDULED
- ~C-c / d~       sparse tree with deadlines

- ~DEADLINE <YYYY-MM-DD DoW +2d~   defining repeated events/tasks
- ~.+2w~     repetition interval starting with last DONE timestamp
- ~++3m~     never show multiple times even if not DONE
- ~.+2d/4d~  show up on agenda not earlier as 2 days until 4 days
- ~+1w -2d~  repeat weekly but show not earlier as two days before

- ~C-c C-x c~  clone (recurring) event with time-shift  (~org-clone-subtree-with-time-shift~)
  - good idea: create recurring event and clone it with time-shift
  - this way, canceling single events or moving single events is
    possible

- ~13:00-15:15~ or ~13:00+2:15~  time duration
- ~<2013-11-15 Fri>-<2013-11-17 Sun>~ date duration
- ~C-c C-y~ return time range between dates

- ~UP/DOWN~ on time stamp start/end -> toggle active/inactive

** agenda ([[http://orgmode.org/org.html#Agenda-Views][docu]])

- ~C-c [~    add buffer to agenda
- ~C-c ]~    remove buffer from agenda
- ~C-c a~    show agenda command menu
- ~C-c a a~  *invoke agenda view*

- ~C-c C-x <~  *lock agenda* to subtree
- ~C-c C-x >~  *release* agenda restriction *lock*

when being *in agenda* mode:

- ~q~        *quit agenda*

- ~j~        *jump to date*
- ~.~        *goto today*
- ~f/b~      *forward/back*
- ~v~        *choose view menu*
- ~d/w~      *day/week view*
- ~v d/w/m~  view for day/week/month
- ~r~        *refresh*

- ~RET~   *goto item*
- ~SPC~   show item
- ~<~     *toggle filter to file*
- ~F~     *toggle follow mode*
- ~o~     *delete other window*
- ~/~     filter by tag

- ~E~     toggle entry text
- ~R~     toggle clock report

- ~t~         *change TODO state*
- ~:~ or ~T~  *set tags*
- ~S-UP/DOWN~     *set priority*
- ~,~             set priority
- ~S-LEFT/RIGHT~  *change timestamp day*
- ~>~         change timestamp to today
- ~e~         set effort

- ~m~     mark
- ~u~     unmark
- ~B~     bulk action

- clocking
  - ~I~   start
  - ~O~   stop
  - ~X~   cancel
  - ~J~   jump to running clock entry

- attachments to TODO entries
  - ~C-c C-a~    *attachment menu*
  - ~C-c C-a s~  *set attachment folder*
  - ~C-c C-a i~  inherit attachment folder
  - ~C-c C-a o~  *open attachment*

** clocking time ([[http://orgmode.org/org.html#Clocking-work-time][docu]])

- ~C-c C-x C-i~     start clock on item
- ~C-c C-x C-o/x~   stop or cancel clock on item
- ~C-c C-x C-d~     display total subtree times
- ~C-c C-c~         remove displayed times
- ~C-c C-x C-r~     insert/update table with report

*** example sub-hierarchy with report

#+BEGIN: clocktable :maxlevel 2 :scope subtree
Clock summary at [2012-11-19 Mon 11:17]

| Headline     | Time    |
|--------------+---------|
| *Total time* | *27:16* |
|--------------+---------|
#+END:

**** example item
:LOGBOOK:
CLOCK: [2012-11-19 Mon 11:16]--[2012-11-19 Mon 11:17] =>  0:01
CLOCK: [2012-11-18 Sun 19:15]--[2012-11-18 Sun 19:23] =>  0:08
:END:

**** another item
:LOGBOOK:
CLOCK: [2012-11-18 Sun 19:26]--[2012-11-18 Sun 19:33] =>  0:07
CLOCK: [2012-11-17 Sat 16:25]--[2012-11-18 Sun 19:25] => 27:00
:END:

** dynamic blocks with ELISP ([[http://orgmode.org/org.html#Dynamic-blocks][docu]])

- execute ELISP functions in special blocks (see docu)

- ~C-c C-x C-u~      update block
- ~C-u C-c C-x C-u~  update buffer blocks

** source code ([[http://orgmode.org/org.html#Working-With-Source-Code][docu]])

- python "Hello World"
- ~C-c '~      *edit in native mode*
- ~<s + TAB~   *easy templates* ([[http://orgmode.org/org.html#Easy-Templates][docu]])

#+BEGIN_SRC python
  def foo(argument):
       print "Hello World"
 #+END_SRC

** babel ([[http://orgmode.org/org.html#Library-of-Babel][docu]])

- http://orgmode.org/org.html#Languages
  - 2012-04-23: 35(!) languages

- ~C-c C-c~    *execute code*
- ~C-c C-v j~  insert header argument (menu)

- *many* shortcuts for all kind of things
  - debugging
  - output control
  - navigation
  - session handling

- ~C-c C-v b~  execute babel in buffer
- ~C-c C-v s~  execute babel in subtree

*** babel simple ([[http://orgmode.org/org.html#Working-With-Source-Code][doc]])

- some examples are taken from [[http://orgmode.org/worg/org-contrib/babel/intro.html][Worg: Introduction to Babel]]

**** shell

#+BEGIN_SRC sh 
pwd
#+END_SRC

**** ruby

#+begin_src ruby
require 'date'
"This file was last evaluated on #{Date.today}"
#+end_src

**** python

#+BEGIN_SRC python
return 42 + 7
#+END_SRC

**** ditaa

#+begin_src ditaa :file blue.png :cmdline -r
  +---------+
  | cBLU    |
  |         |
  |    +----+
  |    |cPNK|
  |    |    |
  +----+----+
#+end_src

*** babel advanced

**** session with shell and R

#+name: directories
#+begin_src sh :results replace
  cd ~/archive/events_memories && du -sc * |grep -v total
#+end_src

Using result set "directories" from above as "dirs" in R below:

#+name: directory-pie-chart(dirs = directories)
#+begin_src R :session R-pie-example :file ./dirs.png
  pie(dirs[,1], labels = dirs[,2])
#+end_src


** LaTeX ([[http://orgmode.org/org.html#Embedded-LaTeX][docu]])

- ~C-c '~        *open block native buffer*

- ~C-c C-x C-l~  preview LaTeX fragments
- ~C-c C-c~      quit preview
- ~C-c C-x \~    toggle preview TeX characters as UTF-8

Greek characters \alpha \beta \phi \LaTeX{}  $\varphi$

- ~M-x org-cdlatex-mode~  CDLaTeX minor mode
  - from http://staff.science.uva.nl/~dominik/Tools/cdlatex/
  - similar to AucTeX
  - ~C-c {~     insert environment
  - ~equ TAB~   expands equation
  - ~`~         insert math symbols (menu)

#+BEGIN_LaTeX
  
  \section{Section Title}
  
  This is \emph{emphasized} and $y=x^2$ is an equation.
  
#+END_LaTeX

** export formats ([[http://orgmode.org/org.html#Exporting][docu]])

- ~C-c C-e~   *export menu*
- ~C-c ;~     toggle COMMENT keyword on entry

- tag: "noexport"

- ASCII/Latin-1/UTF-8 export
- HTML
- LaTeX
- PDF
- DocBook
- OpenDocument Text
- TaskJuggler
- Freemind
- XOXO
- iCalendar
- ...

- [ ] DEMO: export this as PDF (plain)
- [ ] DEMO: export this as PDF (beamer)

** Mobile-org ([[http://orgmode.org/org.html#MobileOrg][docu]])

- great [[http://mobileorg.ncogni.to/][iOS app]]
  - no iOS on my side
- "advanced-beta" of [[http://wiki.github.com/matburt/mobileorg-android/][Android app]]
  - Dropbox, ssh, scp, WEBDAV, gpg encryption, ...

#+BEGIN_SRC emacs-lisp
;;; http://orgmode.org/org.html#MobileOrg
;;; directory where to store MobileOrg-files
(setq org-mobile-directory "~/share/all/org-mode/mobile-org/")
(setq org-directory "~/share/all/org-mode")
(setq org-mobile-inbox-for-pull "~/share/all/org-mode/inbox.org")
(setq org-mobile-force-id-on-agenda-items nil)
'(org-mobile-files (quote ("~/share/all/org-mode/contacts.org" "~/data/share/all/org-mode/hardware.org" )))
#+END_SRC

** many many many many more features!

- sections above are only a small fraction of the feature-set of Org-mode!
- read [[http://orgmode.org/org.html][the manual]] or [[http://news.gmane.org/gmane.emacs.orgmode][the mailinglist]] to get inspired :-)

** customization per ...

- per configuration
- per file
- per heading


* Org-mode Applied

- everybody has *different requirements*
- *Org-mode as a Lego toolbox* to build customized solutions
- these are *my personal* solutions

** yasnippet: "tbrief"

1. mkdir a_letter
2. cd a_letter
3. create letter.org
4. open letter.org in Emacs
5. execute yasnippet command "tbrief"
6. enter information
7. execute babel-block
8. edit TeX file generated
9. make pdf
10. optionally: delete letter.org
11. letter ready to send :-)

** org-contacts

- http://julien.danjou.info/projects/emacs-packages#org-contacts

- contacts forming a hierarchy which reflects their relations
  - meta-persons like "parents" or "Simpsons Family"

- person-specific tasks, events, ... done right
  - mixture of things related to *person*

- sparse trees and column mode

#+BEGIN_SRC emacs-lisp

(setq org-contacts-files "~/share/all/org-mode/contacts.org")

(setq org-link-abbrev-alist
  '(
	("contact" . "~/share/all/org-mode/contacts.org::/\*.*%s/")
  ))

;; ######################################################
;; contact management with org-contacts
;; http://julien.danjou.info/org-contacts.html
(require 'org-contacts)
(custom-set-variables '(org-contacts-files "~/share/all/org-mode/contacts.org"))

#+END_SRC

** references

- [[file:~/share/all/org-mode/references.org][My Reference-Management]]
- adding a reference (from bibtex file)
  - tagging
  - link to PDF
- integrated annotated PDF files

#+BEGIN_SRC emacs-lisp
;; ######################################################
;; http://tincman.wordpress.com/2011/01/04/research-paper-management-with-emacs-org-mode-and-reftex/
;; org-mode and paper references

(defadvice reftex-format-citation (before eval-citation-format)
  (setq format (eval format)))

(defun org-mode-reftex-setup ()
  (load-library "reftex")
  (and (buffer-file-name) (file-exists-p (buffer-file-name))
       (progn
	 ;enable auto-revert-mode to update reftex when bibtex file changes on disk
	 (global-auto-revert-mode t)
	 (reftex-parse-all)
	 ;add a custom reftex cite format to insert links
	 (reftex-set-cite-format
	  '((?b . "[[bib:%l][%l.bib]]")
	    (?r . "[[ref:%l][%l]]")
	    (?p . "[[pdf:%l][%l.pdf]]")
	    (?a . "[[notes:%l][%l-notes.pdf]]")
	    (?s . "[[pdf:%l-self][%l-self.pdf]]")
	    (?t . "%t")
	    (?h . (concat "** %l - %t\n:PROPERTIES:\n:CREATED: "
			  "<" (substring (format-time-string (org-time-stamp-format t t)) 1 -1) ">"
			  "\n:ID: %l\n:END:\n[[bib:%l][%l.bib]]\n[[pdf:%l][%l.pdf]]\n\n*** Abstract\n\n#+BEGIN_QUOTE\n#+END_QUOTE\n\n"))
	    (?n . (concat "*** PDF Annotations: [[notes:%l][%l-notes.pdf]]\n:PROPERTIES:\n:CREATED: "
			  "<" (substring (format-time-string (org-time-stamp-format t t)) 1 -1) ">"
			  "\n:ID: %l-notes\n:END:\n\n"
			  "\#+begin_src sh :results output\n"
			  "${HOME}/bin/vkextract_annotations_to_orgmode_snippet.sh %l\n"
                          "#+end_src"))
	    ))))
  (define-key org-mode-map (kbd "C-c )") 'reftex-citation)
  (define-key org-mode-map (kbd "C-c (") 'org-mode-reftex-search))

;(add-hook 'org-mode-hook 'org-mode-reftex-setup)
(add-hook 'org-mode-hook
	   (lambda ()
	     (if (member "CHECK_NEEDED" org-todo-keywords-1)
		 (org-mode-reftex-setup))))

(defun org-mode-reftex-search ()
  ;;jump to the notes for the paper pointed to at from reftex search
  (interactive)
  (org-open-link-from-string (format "[[ref:%s]]" (reftex-citation t))))

(setq org-link-abbrev-alist
      '(
	("bib" . "~/archive/library/%s.bib")
	("ref" . "file:~/share/all/org-mode/references.org::/%s/")
	("pdf" . "~/archive/library/%s.pdf")
	("notes" . "~/archive/library/%s-notes.pdf")
	))

#+END_SRC

** workflows

- [[https://github.com/capitaomorte/yasnippet][yasnippet]] as flexible template system
- example: gdipruef at id:teaser-tests

** Memacs

- What happened on [2008-09-15 Mon]?
- Documentation and Source: https://github.com/novoid/Memacs

*** existing modules

- RSS
- CSV
- ISO datestamps in filenames
- git commits
- Subversion commits
- iCal
- mbox
- maildir
- IMAP
- Android Phonecalls
- Android Text Messages (SMS)
- EXIF (photographs)


* Still Missing Topics

Things I did not include yet but are worth mentioning:

- [ ] org-protocol

* Testing section                                                  :noexport:
:PROPERTIES:
:ID: teaser-tests
:END:

* Local Variables                                                  :noexport:
# Local Variables:
# eval: (org-expiry-deinsinuate)
# mode: auto-fill
# mode: flyspell
# eval: (ispell-change-dictionary "en_US")
# End:
